{"mappings":"CCmDA,AAnDA,eACI,EAAS,IAAI,CACb,EAAO,mBAAmB,CAC1B,EAAS,MAAM,EAMX,AAJJ,CAAA,EAAS,GAEH,wHAFN,EAIW,QAAQ,CAAC,SAChB,OAAS,EAAS,QAElB,OAAS,EAAS,OAGtB,IAAM,EAAM,SAAS,cAAc,CAAC,gBAC9B,EAAU,CACZ,OAAQ,EACR,MAAO,EACP,OAAQ,CACJ,CACI,KAAM,UACN,IAAK,EACL,SAAU,OACV,OAAQ,EAAO,QAAQ,CAAC,SAAW,OAAS,KAChD,EACH,AACL,EAEA,IAAI,aAAa,CAAC,EAAK,GAAS,IAAI,CAAC,SAAS,CAAO,EACjD,QAAQ,GAAG,CAAC,8BAChB,EACJ","sources":["<anon>","src/scripts/igv.js"],"sourcesContent":["var $ed485a6141597638$exports = {};\nasync function $ed485a6141597638$var$igvBrowser(bamUrl = null, locs = \"1:1000000-1001000\", genome = \"hg38\") {\n    bamUrl = bamUrl ? bamUrl : \"https://s3.amazonaws.com/1000genomes/data/HG00103/alignment/HG00103.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram\";\n    if (bamUrl.endsWith(\".cram\")) baiUrl = bamUrl + \".crai\";\n    else baiUrl = bamUrl + \".bai\";\n    const div = document.getElementById(\"igvContainer\");\n    const options = {\n        genome: genome,\n        locus: locs,\n        tracks: [\n            {\n                name: \"HG00103\",\n                url: bamUrl,\n                indexURL: baiUrl,\n                format: bamUrl.endsWith(\".cram\") ? \"cram\" : \"bam\"\n            }\n        ]\n    };\n    igv.createBrowser(div, options).then(function(browser) {\n        console.log(\"IGV browser is initialized.\");\n    });\n}\nfunction $ed485a6141597638$var$loadBAMFiles() {\n    const bamFileInput = document.getElementById(\"bamFileInput\");\n    const selectedFileName = document.getElementById(\"selectedFileName\");\n    if (fileInput.files[0]) selectedFileName.textContent = `Selected: ${fileInput.files[0].name}`;\n    else selectedFileName.textContent = \"\";\n    if (bamFileInput.files.length > 0) {\n        const bamUrl = URL.createObjectURL(bamFileInput.files[0]);\n        $ed485a6141597638$var$igvBrowser(bamUrl);\n    }\n}\n$ed485a6141597638$var$igvBrowser();\n\n\n//# sourceMappingURL=igv.3164f558.js.map\n","async function igvBrowser(\n    bamUrl = null,\n    locs = \"1:1000000-1001000\",\n    genome = \"hg38\",\n) {\n    bamUrl = bamUrl\n        ? bamUrl\n        : \"https://s3.amazonaws.com/1000genomes/data/HG00103/alignment/HG00103.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram\";\n\n    if (bamUrl.endsWith(\".cram\")) {\n        baiUrl = bamUrl + \".crai\";\n    } else {\n        baiUrl = bamUrl + \".bai\";\n    }\n\n    const div = document.getElementById(\"igvContainer\");\n    const options = {\n        genome: genome,\n        locus: locs, // Setting the initial location\n        tracks: [\n            {\n                name: \"HG00103\",\n                url: bamUrl,\n                indexURL: baiUrl,\n                format: bamUrl.endsWith(\".cram\") ? \"cram\" : \"bam\", // Adjusting format based on file extension\n            },\n        ],\n    };\n\n    igv.createBrowser(div, options).then(function(browser) {\n        console.log(\"IGV browser is initialized.\");\n    });\n}\n\nfunction loadBAMFiles() {\n    const bamFileInput = document.getElementById(\"bamFileInput\");\n    const selectedFileName = document.getElementById(\"selectedFileName\");\n\n    if (fileInput.files[0]) {\n        selectedFileName.textContent = `Selected: ${fileInput.files[0].name}`;\n    } else {\n        selectedFileName.textContent = \"\";\n    }\n\n    if (bamFileInput.files.length > 0) {\n        const bamUrl = URL.createObjectURL(bamFileInput.files[0]);\n\n        igvBrowser(bamUrl);\n    }\n}\n\nigvBrowser();\n"],"names":["$ed485a6141597638$var$igvBrowser","bamUrl","locs","genome","endsWith","baiUrl","div","document","getElementById","options","locus","tracks","name","url","indexURL","format","igv","createBrowser","then","browser","console","log"],"version":3,"file":"igv.3164f558.js.map"}